---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/header/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { marked } from 'marked';
import './CreationDetail.scss'

type Props = CollectionEntry<'collection'>['data'];

const { title, descriptionMd, date, subtext, heroImage, media, link, shouldIframe, movieUrl} = Astro.props;
const descriptionParsed = marked.parse(descriptionMd.replaceAll('\n', '\n\n'), {breaks: true, gfm: true});
---

<html lang="en">
	<head>
		<BaseHead title={title} description={subtext} />
		<style>
			
		</style>
	</head>

	<body>
		<Header />
		<main class="creationDetail">
			<article>

				{shouldIframe ? <div class="iframeWrapper">
					<iframe src={link}></iframe>
					<div>window into <a href={link}>{link}</a></div>
				</div> : <div class="hero-image">
					{movieUrl ? <video controls>
						<source src={movieUrl} type="video/webm" />
					</video>  : <img src={heroImage} alt="" />}
				</div>}
				<div class="content">
				<div class="prose">
					<div class="header">
						<a href={link}>
							<h2>{title}</h2>
						</a>
						<div class="date">
							{date && <FormattedDate date={date} />}
						</div>
						<i>{subtext}</i>
					</div>
					<p set:html={descriptionParsed}></p>
					<slot />
				</div>
				<div class="images">{media.slice(1, media.length - 1).map(imgUrl => <img 
				class="medium" src={imgUrl}/>)}</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
